name: Deploy to GitHub Pages

# D√©clenche le workflow sur push vers main
on:
  push:
    branches: [ main ]  # Change en 'master' si ton repo l‚Äôutilise
  workflow_dispatch:    # Permet de lancer manuellement depuis l‚Äôonglet Actions

# Permissions n√©cessaires pour GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# √âvite les d√©ploiements concurrents
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # üèóÔ∏è √âtape 1 : Construction du projet
  build:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ R√©cup√®re le code du d√©p√¥t
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Configure Node.js (version 20)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      # 3Ô∏è‚É£ Installe les d√©pendances
      - name: Install dependencies
        run: npm ci  # plus fiable que npm install

      # 4Ô∏è‚É£ Construit le projet
      - name: Build project
        run: npm run build

      # 5Ô∏è‚É£ Configure GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v4

      # 6Ô∏è‚É£ T√©l√©verse le dossier de build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'  # ‚ö†Ô∏è adapte selon ton framework (ex: 'build' pour React)

  # üöÄ √âtape 2 : D√©ploiement sur GitHub Pages
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build  # Attend que le job 'build' soit termin√©

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
